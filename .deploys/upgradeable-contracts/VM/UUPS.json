{
  "id": "-",
  "network": "VM",
  "deployments": {
    "0xd8b934580fcE35a11B58C6D73aDeE468a2833fa8": {
      "date": "2023-01-19T03:58:08.236Z",
      "contractName": "PARKt",
      "implementationAddress": "0xd9145CCE52D386f254917e481eB44e9943F39138",
      "layout": {
        "storage": [
          {
            "astId": 804,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 807,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2206,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1121,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 1127,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 1129,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256"
          },
          {
            "astId": 1131,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage"
          },
          {
            "astId": 1133,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage"
          },
          {
            "astId": 1713,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage"
          },
          {
            "astId": 1855,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 2485,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 39,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)"
          },
          {
            "astId": 334,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 786,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1101,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 3440,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "nft",
            "offset": 0,
            "slot": "351",
            "type": "t_address"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "encoding": "inplace",
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "encoding": "mapping",
            "key": "t_bytes32",
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32",
            "value": "t_struct(RoleData)34_storage"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "encoding": "inplace",
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "astId": 31,
                "contract": "contract/PARKt.sol:PARKt",
                "label": "members",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 33,
                "contract": "contract/PARKt.sol:PARKt",
                "label": "adminRole",
                "offset": 0,
                "slot": "1",
                "type": "t_bytes32"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0x7EF2e0048f5bAeDe046f6BF797943daF4ED8CB47": {
      "date": "2023-01-19T05:58:52.207Z",
      "contractName": "PARKt",
      "implementationAddress": "0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B",
      "layout": {
        "storage": [
          {
            "astId": 804,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 807,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2206,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1121,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 1127,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 1129,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256"
          },
          {
            "astId": 1131,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage"
          },
          {
            "astId": 1133,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage"
          },
          {
            "astId": 1713,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage"
          },
          {
            "astId": 1855,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 2485,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 39,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)"
          },
          {
            "astId": 334,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 786,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1101,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 3440,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "nft",
            "offset": 0,
            "slot": "351",
            "type": "t_address"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "encoding": "inplace",
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "encoding": "mapping",
            "key": "t_bytes32",
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32",
            "value": "t_struct(RoleData)34_storage"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "encoding": "inplace",
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "astId": 31,
                "contract": "contract/PARKt.sol:PARKt",
                "label": "members",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 33,
                "contract": "contract/PARKt.sol:PARKt",
                "label": "adminRole",
                "offset": 0,
                "slot": "1",
                "type": "t_bytes32"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0x358AA13c52544ECCEF6B0ADD0f801012ADAD5eE3": {
      "date": "2023-01-19T05:59:20.223Z",
      "contractName": "PARK",
      "implementationAddress": "0xDA0bab807633f07f013f94DD0E6A4F96F8742B53",
      "layout": {
        "storage": [
          {
            "astId": 804,
            "contract": "contract/PARK.sol:PARK",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 807,
            "contract": "contract/PARK.sol:PARK",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2753,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 3106,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1131,
            "contract": "contract/PARK.sol:PARK",
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage"
          },
          {
            "astId": 1133,
            "contract": "contract/PARK.sol:PARK",
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage"
          },
          {
            "astId": 1137,
            "contract": "contract/PARK.sol:PARK",
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 1141,
            "contract": "contract/PARK.sol:PARK",
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 1145,
            "contract": "contract/PARK.sol:PARK",
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 1151,
            "contract": "contract/PARK.sol:PARK",
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
          },
          {
            "astId": 2071,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage"
          },
          {
            "astId": 2284,
            "contract": "contract/PARK.sol:PARK",
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)"
          },
          {
            "astId": 2400,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 2255,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 39,
            "contract": "contract/PARK.sol:PARK",
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)"
          },
          {
            "astId": 334,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 786,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1101,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 4091,
            "contract": "contract/PARK.sol:PARK",
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(Counter)2760_storage"
          },
          {
            "astId": 4204,
            "contract": "contract/PARK.sol:PARK",
            "label": "token",
            "offset": 0,
            "slot": "402",
            "type": "t_contract(IERC20Extensions)4540"
          },
          {
            "astId": 4208,
            "contract": "contract/PARK.sol:PARK",
            "label": "_productionCost",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_bytes32,t_uint256)"
          },
          {
            "astId": 4212,
            "contract": "contract/PARK.sol:PARK",
            "label": "_title",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_bytes32)"
          },
          {
            "astId": 4216,
            "contract": "contract/PARK.sol:PARK",
            "label": "_snapshot",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "encoding": "inplace",
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Extensions)4540": {
            "encoding": "inplace",
            "label": "contract IERC20Extensions",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "encoding": "mapping",
            "key": "t_bytes32",
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32",
            "value": "t_struct(RoleData)34_storage"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "encoding": "mapping",
            "key": "t_bytes32",
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32",
            "value": "t_address"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32",
            "value": "t_bytes32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32",
            "value": "t_string_storage"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2760_storage": {
            "encoding": "inplace",
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "astId": 2759,
                "contract": "contract/PARK.sol:PARK",
                "label": "_value",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "encoding": "inplace",
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "astId": 31,
                "contract": "contract/PARK.sol:PARK",
                "label": "members",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 33,
                "contract": "contract/PARK.sol:PARK",
                "label": "adminRole",
                "offset": 0,
                "slot": "1",
                "type": "t_bytes32"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0xd2a5bC10698FD955D1Fe6cb468a17809A08fd005": {
      "date": "2023-01-19T06:00:40.878Z",
      "contractName": "PARKt",
      "implementationAddress": "0x9D7f74d0C41E726EC95884E0e97Fa6129e3b5E99",
      "layout": {
        "storage": [
          {
            "astId": 804,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 807,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2206,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1121,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 1127,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 1129,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256"
          },
          {
            "astId": 1131,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage"
          },
          {
            "astId": 1133,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage"
          },
          {
            "astId": 1713,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage"
          },
          {
            "astId": 1855,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 2485,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 39,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)"
          },
          {
            "astId": 334,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 786,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1101,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 3440,
            "contract": "contract/PARKt.sol:PARKt",
            "label": "nft",
            "offset": 0,
            "slot": "351",
            "type": "t_address"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "encoding": "inplace",
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "encoding": "mapping",
            "key": "t_bytes32",
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32",
            "value": "t_struct(RoleData)34_storage"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "encoding": "inplace",
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "astId": 31,
                "contract": "contract/PARKt.sol:PARKt",
                "label": "members",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 33,
                "contract": "contract/PARKt.sol:PARKt",
                "label": "adminRole",
                "offset": 0,
                "slot": "1",
                "type": "t_bytes32"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0x0fC5025C764cE34df352757e82f7B5c4Df39A836": {
      "date": "2023-01-19T06:01:17.993Z",
      "contractName": "PARK",
      "implementationAddress": "0xddaAd340b0f1Ef65169Ae5E41A8b10776a75482d",
      "layout": {
        "storage": [
          {
            "astId": 804,
            "contract": "contract/PARK.sol:PARK",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 807,
            "contract": "contract/PARK.sol:PARK",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2753,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 3106,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1131,
            "contract": "contract/PARK.sol:PARK",
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage"
          },
          {
            "astId": 1133,
            "contract": "contract/PARK.sol:PARK",
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage"
          },
          {
            "astId": 1137,
            "contract": "contract/PARK.sol:PARK",
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 1141,
            "contract": "contract/PARK.sol:PARK",
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 1145,
            "contract": "contract/PARK.sol:PARK",
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 1151,
            "contract": "contract/PARK.sol:PARK",
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
          },
          {
            "astId": 2071,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage"
          },
          {
            "astId": 2284,
            "contract": "contract/PARK.sol:PARK",
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)"
          },
          {
            "astId": 2400,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 2255,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 39,
            "contract": "contract/PARK.sol:PARK",
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)"
          },
          {
            "astId": 334,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 786,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1101,
            "contract": "contract/PARK.sol:PARK",
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 4091,
            "contract": "contract/PARK.sol:PARK",
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(Counter)2760_storage"
          },
          {
            "astId": 4204,
            "contract": "contract/PARK.sol:PARK",
            "label": "token",
            "offset": 0,
            "slot": "402",
            "type": "t_contract(IERC20Extensions)4540"
          },
          {
            "astId": 4208,
            "contract": "contract/PARK.sol:PARK",
            "label": "_productionCost",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_bytes32,t_uint256)"
          },
          {
            "astId": 4212,
            "contract": "contract/PARK.sol:PARK",
            "label": "_title",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_bytes32)"
          },
          {
            "astId": 4216,
            "contract": "contract/PARK.sol:PARK",
            "label": "_snapshot",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "encoding": "inplace",
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Extensions)4540": {
            "encoding": "inplace",
            "label": "contract IERC20Extensions",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "encoding": "mapping",
            "key": "t_bytes32",
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32",
            "value": "t_struct(RoleData)34_storage"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "encoding": "mapping",
            "key": "t_bytes32",
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32",
            "value": "t_address"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32",
            "value": "t_bytes32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32",
            "value": "t_string_storage"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2760_storage": {
            "encoding": "inplace",
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "astId": 2759,
                "contract": "contract/PARK.sol:PARK",
                "label": "_value",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "encoding": "inplace",
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "astId": 31,
                "contract": "contract/PARK.sol:PARK",
                "label": "members",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 33,
                "contract": "contract/PARK.sol:PARK",
                "label": "adminRole",
                "offset": 0,
                "slot": "1",
                "type": "t_bytes32"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}